@startuml
'https://plantuml.com/class-diagram

class Main {
    + main(String[] args)
}

class Exit {
    - Logout()
    - System.stop()

}

class Logout {
   + returnToStartMenu()
}

class StreamingService {
    + static User user = null
    + static Start()
}

class StartMenu {
    User.register
    StreamingService.user = User.login
    + run()
}


class Play {
   + watchShow()

}

abstract class MainMenu{


    + WatchHistoryDATA / continue watching
    + WatchLater // UserWatchLaterData

    - Logout
    - abstract  returnToMainMenu{}
    + Search
    + run();
    + exit();
}

class User {
    + static User login(name, passwd)
    + static boolean register(name, passwd)
    ---
    + String name

    + watchhistorydata
    + watchLater

    + User(name)konstruktor
    + save()watchhistorydata
}

class Content {
    CRIME = 1
    DRAMA = 2
    ETC = 4
    ---
    + final int genres // bitfield
    + final String title
    + final int yearOfRelease
    + final float rating

    + final short seasons[]

    + Content(title, year, genres, rating)
    + Content(title, year, rating, genres, seasons)
}

class ContentManager {
    Content[]
    - int genreFilter

    + ContentManager()
    + loadData(filename)
    + int[] search()
    + void setGenreFilter(int genres)
}

class ChooseToWatchLater {
    + addShow()
}

class WatchAgain {
    showHistoryData()
    returnToMainMenu{}
}

class ChooseGenre {
    List <Content> availableGenres
}


package "Util" {
    class FileIO {
    + void saveData(ArrayList<String> data, String path, String header)
    + ArrayList<String> readData(String path)
    + String[] readData(String path, int length)
    }
    class TextUI {
    - Scanner scan
    + boolean promptBinary(String msg)
    + String promptText(String msg)
    + int promptNumeric(String msg)
    + ArrayList<String> promptChoice(ArrayList<String> options, int limit, String msg)
    + void displayMessage(String msg)
    + void displayList(ArrayList<String> list, String msg)
    }
}

class Search {
    + searchContentManager()
}

class WatchLater {
    + viewWatchLater()
}

StreamingService *-- User
Main *-- StreamingService
StreamingService *-- StartMenu
StreamingService *-- MainMenu

StartMenu *-- User

MainMenu *-- Search
MainMenu *-- Content
MainMenu *-- ContentManager
ContentManager *-- Content
MainMenu *-- WatchLater
MainMenu *-- WatchAgain
MainMenu *--ChooseGenre

MainMenu *- ChooseToWatchLater
MainMenu *-- Play
MainMenu *-- Exit
MainMenu *-- Logout
StreamingService *- Util

@enduml